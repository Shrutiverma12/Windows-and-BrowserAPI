A callback is a function that is passed as an argument to another function and is executed after the first function completes its operation. Callbacks are commonly used in JavaScript for handling asynchronous operations, such as making an HTTP request.

A promise is an object that represents the eventual completion (or failure) of an asynchronous operation and its resulting value. Promises provide a simpler way to handle asynchronous operations compared to callbacks by allowing you to chain multiple operations together and handle errors in a more elegant way.


Promises are prefered over Callbacks because
1-Inversion of Control
2-Avoid callback hell by chaining asynchronous operations in a more readable way.
3-Built-in error handling with .catch method.
4-Can be combined or transformed using higher-order functions such as .then and .map.